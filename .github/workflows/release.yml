name: Release to PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build distributions
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run test suite
        run: pytest

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install security tools
        run: |
          pip install pip-audit bandit

      - name: Run pip-audit
        run: pip-audit

      - name: Run bandit
        run: bandit -r src/momentum/ -ll

  publish-testpypi:
    runs-on: ubuntu-latest
    needs: [build, test, security-scan]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Twine
        run: pip install twine

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*

  publish-pypi:
    runs-on: ubuntu-latest
    needs: publish-testpypi
    environment: pypi-production
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Twine
        run: pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

  release-notes:
    runs-on: ubuntu-latest
    needs: publish-pypi
    permissions:
      contents: write
    steps:
      - name: Generate GitHub release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
